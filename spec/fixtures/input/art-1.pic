.PS
A: box "yin"; move;
B: box "yang";
arrow right at 1/4 <A.e,A.ne>;
arrow left  at 1/4 <B.w,B.sw>;

box wid 0.5 ht 0.5;
box wid 0.75 ht 0.75 with .sw at last box .se;
.PE

.PS
circle "x"
circle "y" at 1st circle - (0.4, 0.6)
circle "z" at 1st circle + (0.4, -0.6)
arrow from 1st circle to 2nd circle chop
arrow from 2nd circle to 3rd circle chop
arrow from 3rd circle to 1st circle chop
A: [
	circle;
	line up    1 at last circle .n;
	line down  1 at last circle .s;
	line right 1 at last circle .e;
	line left  1 at last circle .w;
	box dashed with .nw at last circle .se + (0.2, -0.2);
	Caption: center of last box;
]
.PE

.PS
# Plot a single jumper in a box, $1 is the on-off state.
define jumper { [
	shrinkfactor = 0.8;
	Outer: box invis wid 0.45 ht 1;
	# Count on end ] to reset these
	boxwid = Outer.wid * shrinkfactor / 2;
	boxht  = Outer.ht  * shrinkfactor / 2;
	box fill (!$1) with .s at center of Outer;
	box fill  ($1) with .n at center of Outer;
] }

undef jumper
undef jumperblock
.PE

.PS
copy "filename.pic" thru XY
.PE

.PS
copy thru % circle at ($1,$2) % until "END"
1 2
3 4
5 6
END
box
.PE

.PS
x = 14
command ".ds string x is " x "."
.PE
\*[string]

.PS
sh { printf anything }
.PE

.PS
pi = atan2(0,-1);
for i = 0 to 2 * pi by 0.1 do {
	"-" at (i/2, 0);
	"." at (i/2, sin(i)/2);
	":" at (i/2, cos(i)/2);
}
.PE

.PS
copy thru { â€¦ } until "__END__"
.PE
